import axios from "axios";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

// TO DO:
// Make web application to be responsive.
// Add Cypress test that all cards are displayed on the page.
// Create route based on flight number that will render description for each rocket.

// NOTES:
// v3 api version is depreciated.
// core_serial, payload_id, payload_type doesn't exist on new api version.

interface IMission {
  id: string;
  name: string;
  links: {
    patch: {
      small: string;
    };
  };
  flight_number: number;
  date_utc: string;
  success: boolean;
  failures: IFailure[];
}

interface IFailure {
  reason: string;
}

export default function Home() {
  const [data, setData] = useState(null);

  const fetchData = async () => {
    const response = await axios.get("https://api.spacexdata.com/v4/launches");

    setData(response.data);
  };

  useEffect(() => {
    fetchData();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.grid}>
          {data?.slice(0, 10).map((mission: IMission) => {
            return (
              <div key={mission.id} className={styles.card}>
                <Image
                  src={mission.links.patch.small}
                  alt="rocket-launch"
                  width="200px"
                  height="200px"
                />
                <h2>Mission name: {mission.name}</h2>
                <p>Flight number: {mission.flight_number}</p>
                <p>Launch date: {mission.date_utc}</p>
                {mission.success ? (
                  <p>Mission successful!</p>
                ) : (
                  <p>Mission unsuccessful!</p>
                )}
                {mission.failures.map((failure: IFailure) => {
                  return (
                    <p key={mission.id}>Failure reason: {failure.reason}</p>
                  );
                })}
              </div>
            );
          })}
        </div>
      </main>
      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
